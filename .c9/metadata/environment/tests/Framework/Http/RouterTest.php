{"filter":false,"title":"RouterTest.php","tooltip":"/tests/Framework/Http/RouterTest.php","undoManager":{"mark":14,"position":14,"stack":[[{"start":{"row":0,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["namespace Tests\\Framework\\Http;","use Framework\\Http\\Router\\Exception\\RequestNotMatchedException;","use Framework\\Http\\Router\\RouteCollection;","use Framework\\Http\\Router\\Router;","use PHPUnit\\Framework\\TestCase;","use Zend\\Diactoros\\ServerRequest;","use Zend\\Diactoros\\Uri;","class RouterTest extends TestCase","{","    public function testCorrectMethod()","    {","        $routes = new RouteCollection();","        $routes->get($nameGet = 'blog', '/blog', $handlerGet = 'handler_get');","        $routes->post($namePost = 'blog_edit', '/blog', $handlerPost = 'handler_post');","        $router = new Router($routes);","        $result = $router->match($this->buildRequest('GET', '/blog'));","        self::assertEquals($nameGet, $result->getName());","        self::assertEquals($handlerGet, $result->getHandler());","        $result = $router->match($this->buildRequest('POST', '/blog'));","        self::assertEquals($namePost, $result->getName());","        self::assertEquals($handlerPost, $result->getHandler());","    }","    public function testMissingMethod()","    {","        $routes = new RouteCollection();","        $routes->post('blog', '/blog', 'handler_post');","        $router = new Router($routes);","        $this->expectException(RequestNotMatchedException::class);","        $router->match($this->buildRequest('DELETE', '/blog'));","    }","    public function testCorrectAttributes()","    {","        $routes = new RouteCollection();","        $routes->get($name = 'blog_show', '/blog/{id}', 'handler', ['id' => '\\d+']);","        $router = new Router($routes);","        $result = $router->match($this->buildRequest('GET', '/blog/5'));","        self::assertEquals($name, $result->getName());","        self::assertEquals(['id' => '5'], $result->getAttributes());","    }","    public function testIncorrectAttributes()","    {","        $routes = new RouteCollection();","        $routes->get($name = 'blog_show', '/blog/{id}', 'handler', ['id' => '\\d+']);","        $router = new Router($routes);","        $this->expectException(RequestNotMatchedException::class);","        $router->match($this->buildRequest('GET', '/blog/slug'));","    }","    public function testGenerate()","    {","        $routes = new RouteCollection();","        $routes->get('blog', '/blog', 'handler');","        $routes->get('blog_show', '/blog/{id}', 'handler', ['id' => '\\d+']);","        $router = new Router($routes);","        self::assertEquals('/blog', $router->generate('blog'));","        self::assertEquals('/blog/5', $router->generate('blog_show', ['id' => 5]));","    }","    public function testGenerateMissingAttributes()","    {","        $routes = new RouteCollection();","        $routes->get($name = 'blog_show', '/blog/{id}', 'handler', ['id' => '\\d+']);","        $router = new Router($routes);","        $this->expectException(\\InvalidArgumentException::class);","        $router->generate('blog_show', ['slug' => 'post']);","    }","    private function buildRequest($method, $uri): ServerRequest","    {","        return (new ServerRequest())","            ->withMethod($method)","            ->withUri(new Uri($uri));","    }","}",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":5},"action":"insert","lines":["<?php"],"id":3}],[{"start":{"row":2,"column":31},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":9,"column":23},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":6,"column":26},"end":{"row":6,"column":27},"action":"insert","lines":["S"],"id":6},{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"insert","lines":["i"]},{"start":{"row":6,"column":28},"end":{"row":6,"column":29},"action":"insert","lines":["m"]},{"start":{"row":6,"column":29},"end":{"row":6,"column":30},"action":"insert","lines":["p"]}],[{"start":{"row":6,"column":30},"end":{"row":6,"column":31},"action":"insert","lines":["l"],"id":7},{"start":{"row":6,"column":31},"end":{"row":6,"column":32},"action":"insert","lines":["e"]}],[{"start":{"row":6,"column":38},"end":{"row":6,"column":39},"action":"insert","lines":[" "],"id":8},{"start":{"row":6,"column":39},"end":{"row":6,"column":40},"action":"insert","lines":["a"]},{"start":{"row":6,"column":40},"end":{"row":6,"column":41},"action":"insert","lines":["s"]}],[{"start":{"row":6,"column":41},"end":{"row":6,"column":42},"action":"insert","lines":[" "],"id":9},{"start":{"row":6,"column":42},"end":{"row":6,"column":43},"action":"insert","lines":["R"]},{"start":{"row":6,"column":43},"end":{"row":6,"column":44},"action":"insert","lines":["o"]},{"start":{"row":6,"column":44},"end":{"row":6,"column":45},"action":"insert","lines":["u"]},{"start":{"row":6,"column":45},"end":{"row":6,"column":46},"action":"insert","lines":["t"]}],[{"start":{"row":6,"column":46},"end":{"row":6,"column":47},"action":"insert","lines":["e"],"id":10},{"start":{"row":6,"column":47},"end":{"row":6,"column":48},"action":"insert","lines":["r"]}],[{"start":{"row":6,"column":38},"end":{"row":6,"column":39},"action":"insert","lines":["\\"],"id":11},{"start":{"row":6,"column":39},"end":{"row":6,"column":40},"action":"insert","lines":["S"]},{"start":{"row":6,"column":40},"end":{"row":6,"column":41},"action":"insert","lines":["i"]}],[{"start":{"row":6,"column":41},"end":{"row":6,"column":42},"action":"insert","lines":["m"],"id":12},{"start":{"row":6,"column":42},"end":{"row":6,"column":43},"action":"insert","lines":["p"]},{"start":{"row":6,"column":43},"end":{"row":6,"column":44},"action":"insert","lines":["l"]},{"start":{"row":6,"column":44},"end":{"row":6,"column":45},"action":"insert","lines":["e"]}],[{"start":{"row":6,"column":39},"end":{"row":6,"column":45},"action":"remove","lines":["Simple"],"id":13},{"start":{"row":6,"column":39},"end":{"row":6,"column":51},"action":"insert","lines":["SimpleRouter"]}],[{"start":{"row":5,"column":26},"end":{"row":5,"column":38},"action":"insert","lines":["SimpleRouter"],"id":14}],[{"start":{"row":5,"column":38},"end":{"row":5,"column":39},"action":"insert","lines":["\\"],"id":15}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":35,"column":5},"end":{"row":35,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":2,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1564784519356,"hash":"a397fba963631412f6ae17eb4d841327ed56594e"}